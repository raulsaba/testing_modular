// Mocks generated by Mockito 5.3.2 from annotations
// in testing_modular/test/app/modules/crud/data/repositories/crud_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:http/http.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:shared_preferences/shared_preferences.dart' as _i2;
import 'package:testing_modular/app/config/config.dart' as _i3;
import 'package:testing_modular/app/core/network/network_info.dart' as _i6;
import 'package:testing_modular/app/modules/crud/data/external/datasource/crud_local_data_source.dart'
    as _i8;
import 'package:testing_modular/app/modules/crud/data/external/datasource/crud_remote_data_source.dart'
    as _i9;
import 'package:testing_modular/app/modules/crud/data/models/crud_model.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSharedPreferences_0 extends _i1.SmartFake
    implements _i2.SharedPreferences {
  _FakeSharedPreferences_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConfig_1 extends _i1.SmartFake implements _i3.Config {
  _FakeConfig_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClient_2 extends _i1.SmartFake implements _i4.Client {
  _FakeClient_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCrudModel_3 extends _i1.SmartFake implements _i5.CrudModel {
  _FakeCrudModel_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
}

/// A class which mocks [CrudLocalDataSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockCrudLocalDataSourceImpl extends _i1.Mock
    implements _i8.CrudLocalDataSourceImpl {
  MockCrudLocalDataSourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.SharedPreferences get sharedPreferences => (super.noSuchMethod(
        Invocation.getter(#sharedPreferences),
        returnValue: _FakeSharedPreferences_0(
          this,
          Invocation.getter(#sharedPreferences),
        ),
      ) as _i2.SharedPreferences);
  @override
  _i7.Future<bool> clearCache() => (super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
  @override
  _i7.Future<List<_i5.CrudModel>> getCrudListFromCache() => (super.noSuchMethod(
        Invocation.method(
          #getCrudListFromCache,
          [],
        ),
        returnValue: _i7.Future<List<_i5.CrudModel>>.value(<_i5.CrudModel>[]),
      ) as _i7.Future<List<_i5.CrudModel>>);
  @override
  _i7.Future<bool> saveCrudListOnCache(List<_i5.CrudModel>? crudModelList) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveCrudListOnCache,
          [crudModelList],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
}

/// A class which mocks [CrudRemoteDataSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockCrudRemoteDataSourceImpl extends _i1.Mock
    implements _i9.CrudRemoteDataSourceImpl {
  MockCrudRemoteDataSourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Config get config => (super.noSuchMethod(
        Invocation.getter(#config),
        returnValue: _FakeConfig_1(
          this,
          Invocation.getter(#config),
        ),
      ) as _i3.Config);
  @override
  _i4.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_2(
          this,
          Invocation.getter(#client),
        ),
      ) as _i4.Client);
  @override
  _i7.Future<_i5.CrudModel> create(_i5.CrudModel? crudModel) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [crudModel],
        ),
        returnValue: _i7.Future<_i5.CrudModel>.value(_FakeCrudModel_3(
          this,
          Invocation.method(
            #create,
            [crudModel],
          ),
        )),
      ) as _i7.Future<_i5.CrudModel>);
  @override
  _i7.Future<bool> delete(int? id) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [id],
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
  @override
  _i7.Future<List<_i5.CrudModel>> index() => (super.noSuchMethod(
        Invocation.method(
          #index,
          [],
        ),
        returnValue: _i7.Future<List<_i5.CrudModel>>.value(<_i5.CrudModel>[]),
      ) as _i7.Future<List<_i5.CrudModel>>);
  @override
  _i7.Future<_i5.CrudModel> show(int? id) => (super.noSuchMethod(
        Invocation.method(
          #show,
          [id],
        ),
        returnValue: _i7.Future<_i5.CrudModel>.value(_FakeCrudModel_3(
          this,
          Invocation.method(
            #show,
            [id],
          ),
        )),
      ) as _i7.Future<_i5.CrudModel>);
  @override
  _i7.Future<_i5.CrudModel> update(
    int? id,
    _i5.CrudModel? crudModel,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [
            id,
            crudModel,
          ],
        ),
        returnValue: _i7.Future<_i5.CrudModel>.value(_FakeCrudModel_3(
          this,
          Invocation.method(
            #update,
            [
              id,
              crudModel,
            ],
          ),
        )),
      ) as _i7.Future<_i5.CrudModel>);
}
